#!/bin/bash

# Temporary mimicked craypc binary for local dev of generators and integration with craypc
this_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"

function help() {
  echo "Usage:"
  echo "./craypc local [COMMAND] [ARGS]"
  echo ""
  echo "Available Commands:"
  echo ""
  echo "up"
  echo "    Brings up the container(s) locally with volumes bound to the path of this project on your machine"
  echo ""
  echo "down"
  echo "    Brings container(s) down locally"
  echo ""
  echo "$(yq r $this_dir/.craypc/config.yaml 'commands[0].usage')"
  while IFS= read -r line; do
    echo "    $line"
  done < <(yq r $this_dir/.craypc/config.yaml 'commands[0].help')
  echo ""
}

if [[ "$1" == "local" ]]; then
  if [[ "$2" == "up" ]]; then
    CRAYPC_VOLUME=$(pwd) docker-compose -f ./.craypc/docker-compose.yaml up -d --build
  elif [[ "$2" == "down" ]]; then
    docker-compose -f ./.craypc/docker-compose.yaml down -v
  elif [[ "$2" == "generate" ]]; then
    if [[ -z "$(docker ps -a --filter name=^craypc\-generators$ --quiet)" ]] || [[ -z "$(docker ps -a --filter name=^craypc\-generators\-swagger\-codegen\-cli$ --quiet)" ]]; then
      CRAYPC_VOLUME=$(pwd) docker-compose -f ./.craypc/docker-compose.yaml up -d --build
    fi
    shift 2
    passthrough_args=$@
    cmd=$(yq r $this_dir/.craypc/config.yaml 'commands[0].command')
    replace='$@'
    cmd=${cmd/$replace/$passthrough_args}
    docker exec -it craypc-generators $cmd
  else
    help
  fi
else
  help
fi